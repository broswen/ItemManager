service: itemmanager
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  memorySize: 128
  timeout: 3
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - !GetAtt ItemsTable.Arn
        - !GetAtt ReportsTable.Arn

  environment:
    ITEMSTABLE: !Ref ItemsTable
    REPORTSTABLE: !Ref ReportsTable
    REPORTSBUCKET: !Ref ReportsBucket


functions:
  CreateItem:
    handler: src/lambdas/CreateItem.handler
    events:
      - httpApi:
          path: /item
          method: post

  GetItem:
    handler: src/lambdas/GetItem.handler
    events:
      - httpApi:
          path: /item/{id}
          method: get

  UpdateItem:
    handler: src/lambdas/UpdateItem.handler
    events:
      - httpApi:
          path: /item/{id}
          method: put

  DeleteItem:
    handler: src/lambdas/DeleteItem.handler
    events:
      - httpApi:
          path: /item/{id}
          method: delete

  # BatchCreateItem:
  #   handler: src/lambdas/BatchCreateItem.handler
  #   events:
  #     - httpApi:
  #         path: /items
  #         method: post

  StartReport:
    handler: src/lambdas/StartReport.handler
    events:
      - httpApi:
          path: /report
          method: post

  GetReportStatus:
    handler: src/lambdas/GetReportStatus.handler
    events:
      - httpApi:
          path: /report/{id}
          method: get

  GetReportUrl:
    handler: src/lambdas/GetReportUrl.handler
    events:
      - httpApi:
          path: /report/{id}/url
          method: get


# you can add CloudFormation resource templates here
resources:
  - ${file(./cfn-resources/dynamodb.yml)}
  - ${file(./cfn-resources/s3.yml)}
